// Code generated by SQLBoiler 4.19.5 (https://github.com/aarondl/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("SettingToUserUsingUser", testSettingToOneUserUsingUser)
	t.Run("SubscriptionToUserUsingUser", testSubscriptionToOneUserUsingUser)
	t.Run("SubscriptionToChannelUsingChannel", testSubscriptionToOneChannelUsingChannel)
	t.Run("VideoToChannelUsingChannel", testVideoToOneChannelUsingChannel)
	t.Run("ViewToVideoUsingVideo", testViewToOneVideoUsingVideo)
	t.Run("ViewToUserUsingUser", testViewToOneUserUsingUser)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("ChannelToSubscriptions", testChannelToManySubscriptions)
	t.Run("ChannelToVideos", testChannelToManyVideos)
	t.Run("UserToSettings", testUserToManySettings)
	t.Run("UserToSubscriptions", testUserToManySubscriptions)
	t.Run("UserToViews", testUserToManyViews)
	t.Run("VideoToViews", testVideoToManyViews)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("SettingToUserUsingSettings", testSettingToOneSetOpUserUsingUser)
	t.Run("SubscriptionToUserUsingSubscriptions", testSubscriptionToOneSetOpUserUsingUser)
	t.Run("SubscriptionToChannelUsingSubscriptions", testSubscriptionToOneSetOpChannelUsingChannel)
	t.Run("VideoToChannelUsingVideos", testVideoToOneSetOpChannelUsingChannel)
	t.Run("ViewToVideoUsingViews", testViewToOneSetOpVideoUsingVideo)
	t.Run("ViewToUserUsingViews", testViewToOneSetOpUserUsingUser)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("ChannelToSubscriptions", testChannelToManyAddOpSubscriptions)
	t.Run("ChannelToVideos", testChannelToManyAddOpVideos)
	t.Run("UserToSettings", testUserToManyAddOpSettings)
	t.Run("UserToSubscriptions", testUserToManyAddOpSubscriptions)
	t.Run("UserToViews", testUserToManyAddOpViews)
	t.Run("VideoToViews", testVideoToManyAddOpViews)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {}
