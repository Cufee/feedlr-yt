package subscriptions

import "fmt"
import "github.com/cufee/feedlr-yt/internal/types"
import "github.com/cufee/feedlr-yt/internal/templates/components/channel"
import "github.com/cufee/feedlr-yt/internal/templates/components/icons"


templ SubscribedChannelTile(props types.ChannelProps) {
	<div class="relative flex-grow p-4 overflow-hidden group rounded-xl bg-base-300 channel-btn" id={ fmt.Sprintf("sub-channel-tile-%s", props.ID) }>
		<a
			class="absolute inset-0 z-10 flex items-center justify-center invisible w-full text-lg font-bold uppercase bg-black bg-opacity-50 group-hover:visible group-[.htmx-request]:visible"
			hx-indicator={ fmt.Sprintf("#sub-channel-tile-%s", props.ID) } hx-target="body" hx-boost="true"
			href={ templ.URL(fmt.Sprintf("/channel/%s", props.ID)) }>
			<span class="group-[.htmx-request]:hidden">View</span>
			<span class="loading loading-spinner loading-md md:loading-lg invisible group-[.htmx-request]:visible"></span>
		</a>
		@channel.ChannelTile(props.Channel)
	</div>
}

templ UnsubscribeButtonSmall(channelId string) {
	<button type="button"
			class="btn btn-square"
			hx-post={ fmt.Sprintf("/api/channels/%s/unsubscribe?type=button", channelId) }
			hx-swap="outerHTML"
			hx-target="this"
			title="Unsubscribe"
	>
		@icons.BookmarkCrossed()
	</button>
}

templ SubscribeButtonSmall(channelId string) {
	<button type="button"
			class="btn btn-primary btn-square"
			hx-post={ fmt.Sprintf("/api/channels/%s/subscribe?type=button", channelId) }
			hx-swap="outerHTML"
			hx-target="this"
			title="Subscribe"
	>
		@icons.Bookmark()
	</button>
}