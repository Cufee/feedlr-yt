package subscriptions

import "fmt"
import "github.com/cufee/feedlr-yt/internal/types"
import "github.com/cufee/feedlr-yt/internal/templates/components/channel"

templ SearchChannels() {
	<div id="search" class="flex flex-col gap-2">
		<form class="flex items-center justify-center gap-2 group" id="search-box" _="on clear send clear to #search-results">
			<input type="search" placeholder="Enter Channel Name" name="search" minlength="5" maxlength="64" _="on load set my value to &#39;&#39; then" class="self-center w-full max-w-full md:max-w-xs bg-base-200 placeholder:text-center input input-bordered font-control" hx-get="/api/channels/search" hx-target="#search-results" hx-swap="innerHTML" hx-trigger="keyup delay:750ms, search, refresh" hx-sync="this:replace" id="search-input"/>
		</form>
		<div id="search-results" class="flex flex-row flex-wrap justify-center gap-2 text-center"></div>
	</div>
}

templ SearchResultChannels(channels []types.ChannelSearchResultProps) {
	for _, ch := range channels {
		<div class="relative flex-grow p-4 overflow-hidden group md:basis-1/3 rounded-xl bg-base-300 channel-btn" id={ fmt.Sprintf("channel-tile-%s", ch.ID) }>
			if ch.Subscribed {
				<div class="absolute inset-0 z-10 flex items-center justify-center w-full text-lg font-bold uppercase bg-black bg-opacity-50 cursor-default">Subscribed</div>
			} else {
				<button type="button" _={ fmt.Sprintf("on htmx:afterRequest remove #channel-tile-%s", ch.ID) } class="absolute inset-0 z-10 flex items-center justify-center invisible w-full text-lg font-bold uppercase bg-black bg-opacity-50 group-hover:visible group-[.htmx-request]:visible" hx-indicator={ fmt.Sprintf("#channel-tile-%s", ch.ID) } hx-target="#subscriptions-list" hx-swap="afterbegin" hx-post={ fmt.Sprintf("/api/channels/%s/subscribe", ch.ID) }><span class="loading loading-spinner loading-md md:loading-lg invisible group-[.htmx-request]:visible"></span><span class="group-[.htmx-request]:hidden">Subscribe</span></button>
			}
			@channel.ChannelTile(ch.Channel, nil)
		</div>
	}
}