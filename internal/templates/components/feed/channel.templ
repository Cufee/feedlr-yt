package feed

import "fmt"
import "github.com/cufee/feedlr-yt/internal/types"
import "github.com/cufee/feedlr-yt/internal/templates/components/icons"
import "github.com/cufee/feedlr-yt/internal/templates/components/shared"

templ ChannelsFeed(id string, channels []types.ChannelWithVideosProps, withSearch bool) {
	if withSearch {
		@shared.FuseSearch(id, "Filter channels", 1)
	}
	<div class={ fmt.Sprintf("flex flex-col gap-4 %s", shared.OptionalClass(withSearch, "min-h-screen")) } id={ id }>
		for _, channel := range channels {
			<div id={ channel.ID } data-search={ channel.Title } class="transition-all ease-out duration-[250ms]">
				<div class="flex flex-col gap-2 p-3 shadow-inner md:gap-4 md:p-6 bg-base-300 rounded-xl">
					<div class="flex flex-row items-center justify-between gap-2">
						<div class="flex flex-row items-center gap-1"><img src={ channel.Thumbnail } alt={ channel.Title } class="object-cover w-6 h-6 md:w-8 md:h-8 rounded-xl"/><span class="mx-2 text-xl font-bold md:text-2xl">{ channel.Title }</span></div>
						@ChannelFavoriteButton(channel.ID, channel.Favorite)
					</div>
					<div class="relative flex items-center justify-center flex-grow h-44 md:h-60">
						if len(channel.Videos) > 0 {
							@VideoFeed(channel.Videos)
						} else {
							<span class="text-xl font-bold text-center md:text-2xl">There are no videos from { channel.Title }just yet</span>
						}
					</div>
				</div>
			</div>
		}
	</div>
}

templ ChannelTile(channel types.ChannelWithVideosProps) {
	<div class="flex flex-row items-center h-24 gap-2">
		<img class="object-cover h-full rounded-lg" src={ channel.Thumbnail } alt={ channel.Title }/>
		<div class="box-border flex flex-col justify-center p-2">
			<div class="text-2xl font-bold text-ellipsis">{ channel.Title }</div>
			<div class="truncate whitespace-normal line-clamp-3">
				if channel.Description != "" {
					{ channel.Description }
				} else {
					We don't know much about them, but we're sure they are great.
				}
			</div>
		</div>
	</div>
}

templ ChannelFavoriteButton(id string, favorite bool) {
	<button class="btn btn-sm btn-ghost btn-square" hx-post={ fmt.Sprintf("/api/channels/%s/favorite", id) } hx-target="this" hx-swap="outerHTML" id={ fmt.Sprintf("favorite-channel-button-%s", id) }>
		if favorite {
			<span class="text-yellow-500 hover:text-neutral-content">@icons.Bookmark()</span>
		} else {
			<span class="hover:text-yellow-500">@icons.Bookmark()</span>
		}
	</button>
}

