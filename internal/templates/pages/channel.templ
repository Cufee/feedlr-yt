package pages

import (
	"fmt"
	"github.com/cufee/feedlr-yt/internal/templates/components/channel"
	"github.com/cufee/feedlr-yt/internal/templates/components/feed"
	"github.com/cufee/feedlr-yt/internal/templates/components/subscriptions"
	"github.com/cufee/feedlr-yt/internal/types"
)

templ Channel(props types.ChannelPageProps) {
	<head>
		<title>Feedlr - { props.Channel.Title }</title>
		<meta property="og:title" content={ props.Channel.Title }/>
		<meta property="og:type" content="profile"/>
		<meta property="og:description" content={ props.Channel.Description }/>
		<meta property="og:image" content={ props.Channel.Thumbnail }/>
		<meta name="twitter:card" content="summary_large_image"/>
		<meta name="twitter:title" content={ props.Channel.Title }/>
		<meta name="twitter:description" content={ props.Channel.Description }/>
		<meta name="twitter:image" content={ props.Channel.Thumbnail }/>
		<meta name="twitter:image:alt" content={ props.Channel.Title }/>
	</head>
	<div class="relative flex flex-col items-center w-full h-full gap-4 justify-staert">
		<div class="flex items-center w-full gap-2 p-4 rounded-lg bg-base-300">
			<div class="grow">
				@channel.ChannelTile(props.Channel.Channel, subscribeButton(props.Channel.ID, props.Authenticated, props.Subscribed))
			</div>
		</div>
		@feed.VideoFeed(props.Channel.Videos, fmt.Sprintf("/channel/%s", props.Channel.ID), props.Authenticated, props.Authenticated && props.Subscribed, false)
	</div>
}

templ subscribeButton(id string, authenticated, subscribed bool) {
	if authenticated && subscribed {
		@subscriptions.UnsubscribeButtonSmall(id)
	} else if authenticated {
		@subscriptions.SubscribeButtonSmall(id)
	}
}
