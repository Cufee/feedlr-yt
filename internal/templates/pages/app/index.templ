package app

import "github.com/cufee/feedlr-yt/internal/types"
import "github.com/cufee/feedlr-yt/internal/templates/components/feed"
import "github.com/cufee/feedlr-yt/internal/templates/components/shared"

templ ChannelsFeed(props types.UserSubscriptionsFeedProps) {
	<head><title>Feedlr</title></head>

	<div id="app-index" class="flex flex-col gap-4">
		@shared.OpenVideoButton()

		if len(props.Favorites) > 0 {
			@feed.ChannelsFeed("favorite-channels", props.Favorites, false)
		}
		if len(props.WithNewVideos) > 0 {
			@feed.ChannelsFeed("channels-with-videos", props.WithNewVideos, false)
		}
		
		if len(props.WithoutNewVideos) > 0 {
			<div class="relative flex flex-col items-center justify-start min-h-screen gap-1 text-center">
				if len(props.WithNewVideos) > 0 || len(props.Favorites) > 0 {
					<span class="text-2xl font-bold md:text-3xl">All caught up!</span>
					<span class="sticky top-0 text-lg">Keep scrolling to see the rest of your subscriptions</span>
				} else {
					<span class="text-2xl font-bold md:text-3xl">There are no new videos just yet!</span>
					<span class="sticky top-0 text-lg">Keep scrolling to see your subscriptions</span>
				}
			</div>
			@feed.ChannelsFeed("channels-without-videos", props.WithoutNewVideos, len(props.WithoutNewVideos) > 10)
		}
	</div>

	@shared.EmbedMinifiedScript(tilesScrollOnHover())
}

templ VideosFeed(props types.UserVideoFeedProps) {
	<head><title>Feedlr</title></head>

	<div id="app-index" class="flex flex-col gap-4 px-4 md:px-0">
		@shared.OpenVideoButton()
		if len(props.NewVideos) > 0 {
			<div class="flex p-4 bg-base-300 rounded-box">
				@feed.VideoCarousel(props.NewVideos)
			</div>
		}
		@feed.VideoFeed(props.Videos)
	</div>
}

script tilesScrollOnHover() {
	var tiles = document.querySelectorAll(".video-tile");
	tiles.forEach((tile) => {
		tile.addEventListener("mouseenter", () => {
			tile.scrollIntoView({ block: 'nearest', behavior: "smooth" });
		});
	});
}
